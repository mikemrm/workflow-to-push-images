name: cd
on:
  workflow_run:
    workflows:
      - ci
    types:
      - completed
env:
  QUAY_REPO: packet/mmlb-test-gha-pushes
jobs:
  upload:
    if: github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-20.04
    steps:
      - name: Dump context
        uses: crazy-max/ghaction-dump-context@v1

        # from https://securitylab.github.com/research/github-actions-preventing-pwn-requests
        # until https://github.com/actions/download-artifact/issues/60 is closed
      - name: Download artifact
        uses: actions/github-script@v3.1.0
        with:
          script: |
            var artifacts = await github.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{github.event.workflow_run.id}},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "images"
            })[0];
            var download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/images.zip', Buffer.from(download.data));

      - name: Load Images Into Docker
        run: |
          unzip images.zip
          for image in *.tar; do
            docker load <$image
          done

      - name: Login to Quay
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{secrets.REPO_USERNAME}}
          password: ${{secrets.REPO_PASSWORD}}

      - name: Push Images and Manifest
        run: |
          set -x
          sha=${{github.event.workflow_run.head_sha}}
          sha=${sha::8}
          repo=${QUAY_REPO}:sha-${sha}
          if [[ ${{github.event.workflow_run.event}} == "pull_request" ]]; then
              QUAY_REPO+=-pr
              repo=${QUAY_REPO}:pr${{github.event.workflow_run.pull_requests[0].number}}-sha-${sha}
          fi

          docker images --format '{{.Repository}} {{.Tag}} {{.ID}}' | sort | grep ci-image-build
          sleep 1
          docker images --format '{{.Repository}} {{.Tag}} {{.ID}}' | sort | awk '/ci-image-build/ {printf "%s %s\n", $2, $3}' | while read oldtag id; do
                  tag=quay.io/$repo-$(sed 's|sha-[0-9a-z]\+-||' <<<$oldtag)
                  docker tag "$id" $tag
                  docker rmi ci-image-build:$oldtag
                  docker push -q "$tag"
          done

          docker images --digests
          sleep 1
          digests=$(docker images --digests | grep "$QUAY_REPO" | awk '{print $3}' | sort -u)
          docker manifest create "$repo" "$digest"
          docker manifest push "$repo"

          docker images --format '{{.Repository}} {{.Tag}}' | grep "$repotag"- | sort | awk '{printf $2}' | while read tag; do
              echo curl --ouath2-bearer OAUTH2_BEARER -XDELETE "https://quay.io/api/v1/repository/${QUAY_REPO}/$tag"
          done
